<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MusicCollection</name>
    </assembly>
    <members>
        <member name="T:MusicCollection.Editors.AlbumEditor">
            <summary>
            Редактор альбома
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.AlbumEditor.#ctor">
            <summary>
            инициализация компонентов
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.AlbumEditor.#ctor(MusicCollection.Database.IDatabase)">
            <summary>
            коннект к бд
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:MusicCollection.Editors.AlbumEditor.FieldErrorCheck">
            <summary>
            Проверка заполнены ли поля
            </summary>
            <returns></returns>
        </member>
        <member name="M:MusicCollection.Editors.AlbumEditor.button2_Click(System.Object,System.EventArgs)">
            <summary>
            отмена
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Editors.AlbumEditor.button1_Click(System.Object,System.EventArgs)">
            <summary>
            OK
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:MusicCollection.Editors.AlbumEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.AlbumEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Editors.AlbumEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MusicCollection.Editors.AlbumEditor.Album">
            <summary>
            свойство альбома для редактирования
            </summary>
        </member>
        <member name="T:MusicCollection.Editors.AlbumSongEditor">
            <summary>
            Форма для редактирования песен в конкретном альбоме
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.AlbumSongEditor.#ctor">
            <summary>
            инициализация компонентов
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.AlbumSongEditor.#ctor(MusicCollection.Database.IDatabase,MusicCollection.Classes.Album)">
            <summary>
            коннект к бд, закугрзка данных в грид
            </summary>
            <param name="database"></param>
            <param name="album"></param>
        </member>
        <member name="M:MusicCollection.Editors.AlbumSongEditor.simpleButton1_Click(System.Object,System.EventArgs)">
            <summary>
            Добавить песню
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Editors.AlbumSongEditor.simpleButton3_Click(System.Object,System.EventArgs)">
            <summary>
            Отмена
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Editors.AlbumSongEditor.simpleButton2_Click(System.Object,System.EventArgs)">
            <summary>
            ОК
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:MusicCollection.Editors.AlbumSongEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.AlbumSongEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Editors.AlbumSongEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MusicCollection.Editors.AlbumSongEditor.Song">
            <summary>
            песня для редактирования
            </summary>
        </member>
        <member name="T:MusicCollection.Forms.AlbumSongs">
            <summary>
            форма альбомов
            </summary>
        </member>
        <member name="F:MusicCollection.Forms.AlbumSongs._database">
            <summary>
            бд
            </summary>
        </member>
        <member name="F:MusicCollection.Forms.AlbumSongs._songControl">
            <summary>
            контрол который привязывается к форме
            </summary>
        </member>
        <member name="F:MusicCollection.Forms.AlbumSongs._album">
            <summary>
            альбом с которым оперирует
            </summary>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.#ctor">
            <summary>
            инициализация компонентов
            </summary>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.#ctor(MusicCollection.Database.IDatabase,MusicCollection.Classes.Album)">
            <summary>
            коннект к бд, получение альбома для работы
            </summary>
            <param name="database"></param>
            <param name="album"></param>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.OnActivated(System.EventArgs)">
            <summary>
            Остановка Обновления таблицы песен в альбоме
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.OnDeactivate(System.EventArgs)">
            <summary>
            Запуск обновления таблицы песен в альбоме
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.InitializeComponentEx">
            <summary>   Инициализация дополнительных компонентов  </summary>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.Equals(System.Object)">
            <summary> Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>. </summary>
            <returns> true if the specified object  is equal to the current object; otherwise, false. </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.GetHashCode">
            <summary> Serves as a hash function for a particular type.  </summary>
            <returns> A hash code for the current <see cref="T:System.Object"/>. </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:MusicCollection.Forms.AlbumSongs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Forms.AlbumSongs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MusicCollection.Forms.AlbumSongs.Album">
            <summary>
            свойство альбома
            </summary>
        </member>
        <member name="T:MusicCollection.Classes.Album">
            <summary>Класс альбома </summary>
        </member>
        <member name="M:MusicCollection.Classes.Album.#ctor(System.String)">
            <summary>
              Создает альбом по строке </summary>
            <param name="albumName"></param>
        </member>
        <member name="M:MusicCollection.Classes.Album.#ctor(System.Data.IDataRecord)">
            <summary>Создает альбом по данным из БД </summary>
            <param name="data">данные из таблицы альбомов</param>
        </member>
        <member name="M:MusicCollection.Classes.Album.Equals(MusicCollection.Classes.Album)">
            <summary>  Метод сравнения для класса </summary>
            <param name="obj">Экземпляр класса</param>
            <returns>Результат сравнения</returns>
        </member>
        <member name="M:MusicCollection.Classes.Album.Equals(System.Object)">
            <summary> Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>. </summary>
            <returns> true if the specified object  is equal to the current object; otherwise, false. </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:MusicCollection.Classes.Album.GetHashCode">
            <summary> Serves as a hash function for a particular type.  </summary>
            <returns> A hash code for the current <see cref="T:System.Object"/>. </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MusicCollection.Classes.Album.AlbumId">
            <summary>
            ID альбома
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.Album.AlbumName">
            <summary>
            имя альбома
            </summary>
        </member>
        <member name="T:MusicCollection.Classes.AlbumSong">
            <summary>Класс, который связывает конкретную песню с альбомом </summary>
        </member>
        <member name="M:MusicCollection.Classes.AlbumSong.#ctor(System.Data.IDataRecord)">
            <summary>  Конструтор который строит альбом с песнями по таблице из БД </summary>
        </member>
        <member name="M:MusicCollection.Classes.AlbumSong.#ctor(MusicCollection.Classes.Song,MusicCollection.Classes.Album)">
            <summary>
            Конструктор который создает альбом
            </summary>
        </member>
        <member name="M:MusicCollection.Classes.AlbumSong.Equals(MusicCollection.Classes.AlbumSong)">
            <summary>  Метод сравнения для класса </summary>
            <param name="obj">Экземпляр класса</param>
            <returns>Результат сравнения</returns>
        </member>
        <member name="M:MusicCollection.Classes.AlbumSong.Equals(System.Object)">
            <summary> Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>. </summary>
            <returns> true if the specified object  is equal to the current object; otherwise, false. </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:MusicCollection.Classes.AlbumSong.GetHashCode">
            <summary> Serves as a hash function for a particular type.  </summary>
            <returns> A hash code for the current <see cref="T:System.Object"/>. </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MusicCollection.Classes.AlbumSong.Song">
            <summary>
            обьект для доступа к песне альбома
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.AlbumSong.Album">
            <summary>
            обьект альбома
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.AlbumSong.SongId">
            <summary>
            ИД песни
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.AlbumSong.GroupId">
            <summary>
            ИД группы песни
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.AlbumSong.AlbumId">
            <summary>
            ИД альбома
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.AlbumSong.SongName">
            <summary>
            имя песни
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.AlbumSong.GroupName">
            <summary>
            имя группы песни
            </summary>
        </member>
        <member name="T:MusicCollection.Database.IDatabase">
            <summary>Интерфейс который предоставляет функционал для подключения к БД</summary>
        </member>
        <member name="M:MusicCollection.Database.IDatabase.CreateConnection">
            <summary> Получение конекта к базе </summary>
            <returns>Конект</returns>
        </member>
        <member name="M:MusicCollection.Database.IDatabase.Select``1(System.Boolean)">
            <summary>  Метод выбора данных </summary>
            <typeparam name="T"></typeparam>
            <param name="useCache">Давать данные из кеша</param>
            <returns>Коллекция выбранных записей</returns>
        </member>
        <member name="M:MusicCollection.Database.IDatabase.Delete``1(System.Collections.Generic.ICollection{``0})">
            <summary> Метод удаления записей </summary>
            <typeparam name="T">тип группы, песни итд</typeparam>
        </member>
        <member name="M:MusicCollection.Database.IDatabase.Update``1(``0)">
            <summary>
              Метод изменения записей в таблицах
            </summary>
            <typeparam name="T">тип группы, песни итд.</typeparam>
            <param name="source"></param>
        </member>
        <member name="M:MusicCollection.Database.IDatabase.Insert``1(``0)">
            <summary>
              Метод добаления записей в таблицы
            </summary>
            <typeparam name="T">тип группы, песни итд.</typeparam>
            <param name="source">изменяемый обьект в БД</param>
            <returns>измененный обьект</returns>
        </member>
        <member name="T:MusicCollection.Classes.Song">
            <summary>Класс песни </summary>
        </member>
        <member name="M:MusicCollection.Classes.Song.#ctor(MusicCollection.Classes.Song)">
            <summary>
            конструктор обьекта песни  для создания новой
            </summary>
        </member>
        <member name="M:MusicCollection.Classes.Song.#ctor(System.String,MusicCollection.Classes.Group)">
            <summary>
            конструктор песни для редактирования
            </summary>
        </member>
        <member name="M:MusicCollection.Classes.Song.#ctor(System.Data.IDataRecord)">
            <summary>
            конструктор обьекта песни для контакта с БД
            </summary>
        </member>
        <member name="M:MusicCollection.Classes.Song.UpdateGroup(MusicCollection.Classes.Group)">
            <summary>
            изменение группы песни
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:MusicCollection.Classes.Song.Equals(MusicCollection.Classes.Song)">
            <summary>  Метод сравнения для класса </summary>
            <param name="obj">Экземпляр класса</param>
            <returns>Результат сравнения</returns>
        </member>
        <member name="M:MusicCollection.Classes.Song.Equals(System.Object)">
            <summary> Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>. </summary>
            <returns> true if the specified object  is equal to the current object; otherwise, false. </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:MusicCollection.Classes.Song.GetHashCode">
            <summary> Serves as a hash function for a particular type.  </summary>
            <returns> A hash code for the current <see cref="T:System.Object"/>. </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MusicCollection.Classes.Song.Group">
            <summary>
            обьект группы песни
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.Song.SongName">
            <summary>
            имя песни
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.Song.SongId">
            <summary>
            ид песни
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.Song.GroupId">
            <summary>
            ид группы песни
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.Song.GroupName">
            <summary>
            имя группы песни
            </summary>
        </member>
        <member name="T:MusicCollection.Database.SqlDatabase">
            <summary> Класс, который координирует работу с БД (Подключение к бд, удаление, вставка, изменение и выборка записей), реализуя интерфейс IDatabase </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase.ConnectionString">
            <summary>Адрес коннекта </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._cacheChanged">
            <summary> Делегат события изменения кэша</summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._enabledTypes">
            <summary> Список типов </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._groups">
            <summary>
            кэш группы.ключ - ид группы
            </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._songs">
            <summary>
            кэш песни.ключ - ид песни
            </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._albums">
            <summary>
            кэш альбома. ключ - ид альбома
            </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._albumSongs">
            <summary>
            кэш песен в альбоме. листом потому что в обьектах,  ид песни и альбомов могут совпадать
            </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._timer">
            <summary>
              тамер для рефреша данных с бд в таблицах с определенным интервалом
            </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._isTimerRunning">
            <summary>
            идет таймер или нет
            </summary>
        </member>
        <member name="F:MusicCollection.Database.SqlDatabase._interval">
            <summary>
            интервал таймера
            </summary>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.#ctor(System.Double)">
            <summary>
             к-тор бд с таймером
            </summary>
            <param name="interval">интервал таймера</param>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.CreateConnection">
            <summary> Получение конекта к базе </summary>
            <returns>Конект</returns>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.Select``1(System.Boolean)">
            <summary>  Метод выбора данных </summary>
            <typeparam name="T"></typeparam>
            <param name="useCache">Давать данные из кеша</param>
            <returns>Коллекция выбранных записей</returns>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.IsCacheEmpty(System.Type)">
            <summary> Проверка не пустой ли кеш </summary>
            <param name="type">Проверяемый тип</param>
            <returns>Пустой не пустой</returns>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.SelectFromBase``1">
            <summary>  Метод выбора данных из базы</summary>
            <typeparam name="T"></typeparam>
            <returns>Коллекция выбранных записей</returns>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.UpdateCache``1">
            <summary> Обновляет данные кэша </summary>
            <typeparam name="T">тип кэша</typeparam>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.SelectFromCache``1">
            <summary>  Метод выбора данных из кэша</summary>
            <typeparam name="T"></typeparam>
            <returns>Коллекция выбранных записей</returns>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.Delete``1(System.Collections.Generic.ICollection{``0})">
            <summary>Удаление записей из таблиц </summary>
            <typeparam name="T">тип таблицы</typeparam>
            <param name="toDelete"></param>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.Update``1(``0)">
            <summary>Изменение записи в таблице(ах) </summary>
            <typeparam name="T">тип который вызвал запрос</typeparam>
            <param name="source">сама запись</param>
            <returns></returns>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.Insert``1(``0)">
            <summary>Добавление записи в таблицу(ы) </summary>
            <typeparam name="T">тип который вызвал запрос</typeparam>
            <param name="source">запись на добавление</param>
            <returns></returns>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.SendCacheCanged``1">
            <summary>
             обработчик события рефреша данных в таблицах
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MusicCollection.Database.SqlDatabase.CheckType``1">
            <summary>   Проверка типа </summary>
            <typeparam name="T">Тип</typeparam>
            <returns>Тип</returns>
        </member>
        <member name="P:MusicCollection.Database.SqlDatabase.OnCacheChanged">
            <summary>
            событие рефреша кэша
            </summary>
        </member>
        <member name="T:MusicCollection.Classes.Group">
            <summary> Класс группы </summary>
        </member>
        <member name="M:MusicCollection.Classes.Group.#ctor(System.String)">
            <summary>  Конструтор </summary>
        </member>
        <member name="M:MusicCollection.Classes.Group.#ctor(System.Data.IDataRecord)">
            <summary>  Конструтор, который строит по данным из БД </summary>
        </member>
        <member name="M:MusicCollection.Classes.Group.Equals(MusicCollection.Classes.Group)">
            <summary>  Метод сравнения для класса </summary>
            <param name="obj">Экземпляр класса</param>
            <returns>Результат сравнения</returns>
        </member>
        <member name="M:MusicCollection.Classes.Group.Equals(System.Object)">
            <summary> Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>. </summary>
            <returns> true if the specified object  is equal to the current object; otherwise, false. </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:MusicCollection.Classes.Group.GetHashCode">
            <summary> Serves as a hash function for a particular type.  </summary>
            <returns> A hash code for the current <see cref="T:System.Object"/>. </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MusicCollection.Classes.Group.GroupId">
            <summary>
            ИД группы
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.Group.GroupName">
            <summary>
            Имя группы
            </summary>
        </member>
        <member name="P:MusicCollection.Classes.Group.UpdateTime">
            <summary>
            Время последнего изменения
            </summary>
        </member>
        <member name="T:MusicCollection.Editors.GroupEditor">
            <summary>
            редактор группы
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.GroupEditor.#ctor">
            <summary>
            к-тор инициализации компонентов
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.GroupEditor.OKButton_Click(System.Object,System.EventArgs)">
            <summary>
             ОК 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Editors.GroupEditor.cancelButton2_Click(System.Object,System.EventArgs)">
            <summary>
            отмена
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Editors.GroupEditor.FieldErrorCheck">
            <summary>
            проверка  заполенности полей
            </summary>
            <returns></returns>
        </member>
        <member name="F:MusicCollection.Editors.GroupEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.GroupEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Editors.GroupEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MusicCollection.Editors.GroupEditor.Group">
            <summary>
            Запись/чтение группы с которой работает редактор
            </summary>
        </member>
        <member name="T:MusicCollection.Forms.MainForm">
            <summary> Основная форма </summary>
        </member>
        <member name="F:MusicCollection.Forms.MainForm._groupsControl">
            <summary> Контрол по управлению группами(исполинтелями)  </summary>
        </member>
        <member name="F:MusicCollection.Forms.MainForm._songControl">
            <summary> Контрол по управлению песнями  </summary>
        </member>
        <member name="F:MusicCollection.Forms.MainForm._albumControl">
            <summary> Контрол по управлению связкой группы - песни  </summary>
        </member>
        <member name="M:MusicCollection.Forms.MainForm.#ctor">
            <summary>  Конструтор гл.формы </summary>
        </member>
        <member name="M:MusicCollection.Forms.MainForm.InitializeComponentEx">
            <summary>   Инициализация дополнительных компонентов (загрузка контролов и их привязка к табам)   </summary>
        </member>
        <member name="M:MusicCollection.Forms.MainForm.tabControl1_Selected(System.Object,System.Windows.Forms.TabControlEventArgs)">
            <summary>
             Загрузка отмеченных строк при переключении табов + установка фокуса на контрол.
             </summary>
            <param name="sender">TabControl</param>
            <param name="e"></param>
        </member>
        <member name="F:MusicCollection.Forms.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Forms.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Forms.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MusicCollection.Controls.GroupsControl">
            <summary>Контрол списка исполнителей </summary>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.#ctor">
            <summary>
             инициализация комонентов
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.#ctor(MusicCollection.Database.IDatabase)">
            <summary>
            коннект к бд и добавление данных в грид
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.OnCacheChanged(System.Type,System.Collections.ICollection)">
            <summary>
            обновление данных в таблице
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.SelectClick(System.Object,System.EventArgs)">
            <summary>Обновляет таблицу</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.UpdateClick(System.Object,System.EventArgs)">
            <summary>Изменение записи</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.InsertClick(System.Object,System.EventArgs)">
            <summary>Добавление записи</summary>     
             <param name="sender"></param>
            <param name="e"></param>                                                
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.deleteToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Удаление записей
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.gridControl1_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>                                         
            события клавиатуры </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.GroupsControl_Enter(System.Object,System.EventArgs)">
            <summary> Фокус на контроле. Обновлять кэш не надо</summary>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.GroupsControl_Leave(System.Object,System.EventArgs)">
            <summary> Фокус на контроле теряется. Обновлять кэш.</summary>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.LoadSelectedRows">
            <summary>
            Загрузчик буфера отмеченных строк
            </summary>
        </member>
        <member name="F:MusicCollection.Controls.GroupsControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Controls.GroupsControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MusicCollection.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:MusicCollection.Controls.SongControl">
            <summary>Контрол для песен </summary>
        </member>
        <member name="F:MusicCollection.Controls.SongControl._focusIndex">
            <summary>
            сохраненный индекс для фокуса на гриде
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.#ctor">
            <summary>
            инициализация компонентов
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.#ctor(MusicCollection.Database.IDatabase,MusicCollection.Classes.Album)">
            <summary>
            конструктор контрола для коннекта с бд, получения оттуда данных и их  связь с гридом
            </summary>                                       
             <param name="database">бд</param>
            <param name="album">конкретный альбом.нужен для вызова таблицы песен в альбоме. если null - вызов вне таблицы альбома</param>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.OnCacheChanged(System.Type,System.Collections.ICollection)">
            <summary>
            обновление данных в таблице
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.selectStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            обновление таблицы
            </summary>
            <param name="sender"></param>          
             <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.insertStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            добавление в таблицу
            </summary> 
        </member>
        <member name="M:MusicCollection.Controls.SongControl.updateToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            изменение записи в таблице
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.deleteToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            удаление записи из таблицы                      
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.gridControl1_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
             события клавиатуры </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.SongControl_Enter(System.Object,System.EventArgs)">
            <summary>
             Приостановка обновления контрола
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.SongControl_Leave(System.Object,System.EventArgs)">
            <summary>
            Восстановление обновления контрола
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.LoadSelectedRows">
            <summary>
            Загрузчик буфера отмеченніх строк
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.SetCacheFlag(System.Boolean)">
            <summary>
            Уставновщик флага обновления данных в таблице
            </summary>
            <param name="set"></param>
        </member>
        <member name="F:MusicCollection.Controls.SongControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Controls.SongControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MusicCollection.Editors.SongEditor">
            <summary>
            Форма редактора таблицы песен (добавление/изменение записей ) 
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.SongEditor.#ctor">
            <summary>
            инициализация компонентов
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.SongEditor.#ctor(MusicCollection.Database.IDatabase)">
            <summary>
            к-тор запрашивает у бд таблицу групп для возможного изменения группы песни
            </summary>
            <param name="database">коннект</param>
        </member>
        <member name="F:MusicCollection.Editors.SongEditor._song">
            <summary>
            песня для редактирования или добавления
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.SongEditor.button1_Click(System.Object,System.EventArgs)">
            <summary>
            ОК
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Editors.SongEditor.FieldErrorCheck">
            <summary>
            Проверка полей формы на заполненность
            </summary>
            <returns></returns>
        </member>
        <member name="M:MusicCollection.Editors.SongEditor.button2_Click(System.Object,System.EventArgs)">
            <summary>
            отмена
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Editors.SongEditor.button3_Click(System.Object,System.EventArgs)">
            <summary>
            добавить группу
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:MusicCollection.Editors.SongEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Editors.SongEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Editors.SongEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MusicCollection.Editors.SongEditor.Song">
            <summary>
            Песня с которой форма работает.
            </summary>
        </member>
        <member name="T:MusicCollection.Controls.AlbumControl">
            <summary>Контрол альбома</summary>
        </member>
        <member name="F:MusicCollection.Controls.AlbumControl._albums">
            <summary> Коллекция которую использует грид для отображения </summary>
        </member>
        <member name="F:MusicCollection.Controls.AlbumControl._database">
            <summary> БД </summary>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.#ctor">
            <summary>
            инициализация компонентов
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.#ctor(MusicCollection.Database.IDatabase)">
            <summary>
            коннект к бд и рефреш табов </summary>
            <param name="database"></param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.OnCacheChanged(System.Type,System.Collections.ICollection)">
            <summary>
            обновление данных в таблице
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.selectStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            кнопка обновить
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.UpdateSource">
            <summary>Рефреш грида </summary>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.songslStripButton1_Click(System.Object,System.EventArgs)">
            <summary>
            Вывод формы с песнями альбома
            </summary>
            <param name="sender">кнопка "Песни" в меню</param>
            <param name="e">клик</param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.GOnFormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            Закрытие списка песен в альбоме </summary>
            <param name="sender"></param>                          
             <param name="formClosedEventArgs"></param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.insertStripButton_Click(System.Object,System.EventArgs)">
            <summary>
              Вызов редактора альбома  для добавления нового
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.updateToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
             Вызов редактора альбома  для изменения выделенного
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.gridControl1_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
             события клавиатуры </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.AlbumControl_Leave(System.Object,System.EventArgs)">
            <summary>
            Восстановление обновления контрола
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.AlbumControl_Enter(System.Object,System.EventArgs)">
            <summary>
             Приостановка обновления контрола
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.LoadSelectedRows">
            <summary>
            Загрузчик буфера отмеченных строк
            </summary>
        </member>
        <member name="F:MusicCollection.Controls.AlbumControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MusicCollection.Controls.AlbumControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MusicCollection.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MusicCollection.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MusicCollection.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
